#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R         &kp T                                          &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F         &kp G        &kp LS(LG(S))      &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V         &kp B        &none              &none          &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_ALT  &lt 1 SPACE  &kp SPACE          &kp BACKSPACE  &lt 2 ENTER                             &mo 6
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW_NUMBER {
            bindings = <
&kp ESCAPE  &trans     &kp UP_ARROW  &trans     &trans                                    &trans                 &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp BACKSPACE
&kp TAB     &kp LEFT   &kp DOWN      &kp RIGHT  &kp LEFT_BRACKET      &trans      &trans  &kp RIGHT_BRACKET      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ENTER
&kp PLUS    &kp MINUS  &kp ASTERISK  &kp SLASH  &kp LEFT_PARENTHESIS  &trans      &trans  &kp RIGHT_PARENTHESIS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans      &trans     &trans        &trans     &trans                &trans      &trans  &lt 3 NUMBER_0                                                   &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION       &kp AT_SIGN  &kp HASH  &kp DOLLAR     &kp PERCENT                         &kp CARET        &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NON_US_BACKSLASH  &kp PIPE     &kp SQT   &kp SEMICOLON  &kp LEFT_BRACE  &trans      &trans  &kp RIGHT_BRACE  &kp COLON      &kp DOUBLE_QUOTES  &kp PIPE              &trans
&trans                &trans       &trans    &trans         &kp UNDERSCORE  &trans      &trans  &kp EQUAL        &trans         &trans             &trans                &trans
&trans                &trans       &trans    &trans         &mo 3           &mo 3       &trans  &trans                                                                   &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12              &trans                      &trans  &trans               &trans  &trans  &trans
&kp F5  &kp F6   &kp F7   &kp INTERNATIONAL_5  &trans  &trans      &trans  &trans  &kp INTERNATIONAL_4  &trans  &trans  &trans
&kp F1  &kp F2   &kp F3   &kp F4               &trans  &trans      &trans  &trans  &trans               &trans  &trans  &trans
&trans  &trans   &trans   &trans               &trans  &trans      &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                      &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I      &to_layer_0 O    &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans      &trans  &to_layer_0 H  &mkp MB1       &mkp MB3           &mkp MB2         &to_layer_0 MINUS
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans      &trans  &to_layer_0 N  &to_layer_0 M  &to_layer_0 COMMA  &to_layer_0 DOT  &to_layer_0 SLASH
&trans         &trans         &trans         &trans         &trans         &trans      &trans  &trans                                                            &trans
            >;
        };

        SCROLL {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                      &to_layer_0 Y  &to_layer_0 U  &trans             &to_layer_0 O    &trans
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans      &trans  &to_layer_0 H  &to_layer_0 J  &to_layer_0 K      &to_layer_0 L    &to_layer_0 MINUS
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans      &trans  &to_layer_0 N  &to_layer_0 M  &to_layer_0 COMMA  &to_layer_0 DOT  &to_layer_0 SLASH
&trans         &trans         &trans         &trans         &trans         &trans      &trans  &trans                                                            &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans        &trans        &trans        &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &bt BT_CLR      &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans          &trans                                                  &trans
            >;
        };
    };
};
